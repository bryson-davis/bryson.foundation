<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>120</x>
      <y>90</y>
      <w>130</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>edgemesh-server</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>160</x>
      <y>150</y>
      <w>20</w>
      <h>520</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>170</x>
      <y>150</y>
      <w>380</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
1. client-go查询有无casecret，
获取ca私钥以及ca证书，
没有的话，就生成ca私钥和ca证书
并存储到 casecret里面

2.检查k8s secret里面有无edgemeshserversecret
获取私钥和证书，如果没有的话，
就生成一个私钥，同时使用ca（证书+私钥）
生成一个server的证书供自己使用 </panel_attributes>
    <additional_attributes>10.0;170.0;60.0;170.0;60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>170</x>
      <y>340</y>
      <w>370</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
1. 使用jwt+Ca私钥生成一个jwt token,
将这个jwt token连并ca证书的hash值进行
拼装成一个caHashToken
2. caHashToken会被保存到k8s secret里面
3. 启动一个协程，每隔12小时对token进行更新
</panel_attributes>
    <additional_attributes>10.0;130.0;60.0;130.0;60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>170</x>
      <y>490</y>
      <w>380</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
1. 提供/ca.crt用下载ca证书
2. 提供/edge.crt用于接收client
的证书申请请求（csr）并进行签名
具体首先会校验jwt token，
通过之后会使用ca私钥ca证书对CSR进行签名；
签名之后就生成了一个客户端的DER（也就是
经过ca认证的客户端证书了）
</panel_attributes>
    <additional_attributes>10.0;150.0;60.0;150.0;60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>160</x>
      <y>110</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>750</x>
      <y>60</y>
      <w>120</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>edgemesh-server</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>790</x>
      <y>130</y>
      <w>20</w>
      <h>60</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>790</x>
      <y>80</y>
      <w>30</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>790</x>
      <y>220</y>
      <w>20</w>
      <h>310</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>790</x>
      <y>570</y>
      <w>20</w>
      <h>60</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1130</x>
      <y>570</y>
      <w>20</w>
      <h>60</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1130</x>
      <y>530</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>790</x>
      <y>520</y>
      <w>30</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1130</x>
      <y>120</y>
      <w>20</w>
      <h>420</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1140</x>
      <y>440</y>
      <w>160</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
rotate():
1. 做证书轮换</panel_attributes>
    <additional_attributes>10.0;70.0;60.0;70.0;60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1140</x>
      <y>200</y>
      <w>590</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
1. 基于InsecureSkipVerify:true访问
&lt;edgemeshserver-url&gt;/ca.crt，获取ca证书
2.使用token(在注册节点的时候从keadm 
gettoken获取的token，包含了ca证书的哈希值
和jwt token)校验获取的ca.crt是否被篡改，主要
是做hash值对比
3. ca证书校验通过后，保存到文件
4. 生成私钥，并用私钥csr；利用ca证书，做Certificates:[]tls.Certificate{certificate},
建立与edgemeshserver的tls通信，传递csr、token
5. edgemeshserver会使用ca对csr做签名，生成证书，发回给edgemeshagent
edgemeshagent获取到证书
6. 到这里就获取了私钥和证书，将私钥和证书保存到本地文件
</panel_attributes>
    <additional_attributes>10.0;220.0;60.0;220.0;60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1130</x>
      <y>70</y>
      <w>30</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1060</x>
      <y>50</y>
      <w>170</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>edgemesh-agent</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>910</x>
      <y>150</y>
      <w>110</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>生成证书
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>800</x>
      <y>210</y>
      <w>350</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
/ca.crt
</panel_attributes>
    <additional_attributes>10.0;20.0;330.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>800</x>
      <y>270</y>
      <w>350</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
ca.crt</panel_attributes>
    <additional_attributes>330.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>800</x>
      <y>330</y>
      <w>350</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
/agent.crt
携带csr+token
</panel_attributes>
    <additional_attributes>10.0;20.0;330.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>800</x>
      <y>380</y>
      <w>350</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
edge.crt(证书)</panel_attributes>
    <additional_attributes>330.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>790</x>
      <y>180</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>610</w>
      <h>730</h>
    </coordinates>
    <panel_attributes>
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>540</x>
      <y>70</y>
      <w>230</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;80.0;210.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1140</x>
      <y>110</y>
      <w>620</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
1. 尝试从本地直接加载自身的证书和私钥(挂载主机/etc/kubeedge/edgemesh/certs目录 )
2. 如果成功，对其进行解析，若再成功，直接退出
3. 如果不成功，调用applyCerts</panel_attributes>
    <additional_attributes>10.0;80.0;60.0;80.0;60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>910</x>
      <y>530</y>
      <w>150</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>建立tls的quic长连接
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>500</x>
      <y>700</y>
      <w>380</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>//Text Element
与cloudcore和edgecore认证的区别 ：
1. edgemesh-server无须从本地加载认证信息
2. edgemsh-agent为了避免重启去拉认证信息，将认证信息
写到hostpath中，与edgecore保持一致</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
