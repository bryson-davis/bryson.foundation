<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>300</x>
      <y>800</y>
      <w>320</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>Server
--
+ ConnNotify: ConnNotify
# 用于管理所有连接上来的conn， 
# 会在接收到客户端的连接请示，并
# 成功建立后添加进去；使用了sync.Map进行管理
+ connMgr: *connectionManager
+ Consumer: io.Writer
+ Handler mux.Handler
+ protoServer: ProtocolServer
--
- getTLSConfig()
- getProtoServer()
- ListenAndServerTLS()
- Close()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>720</x>
      <y>670</y>
      <w>170</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>Client
--
+ Options
- protoConn: Conn.Connection
+ somsumer: io.Writer
--
# 根据options里面的内容
# 建立真实类型的连接
+ Connect(): Connection</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>490</y>
      <w>400</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>WSServer
--
-server: *http.Server
--
# 使用http建立ws长连接
- upgrade(http.ResonseWriter, http.Request): websocket.Conn
# 客户端与服务端发起连接时调用的函数。会通过依赖的方式将操作委托给
# Connection对象进行处理
# Connection会调用ServerConn
- ServerHTTP(http.ResponseWriter, http.Request)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>390</x>
      <y>660</y>
      <w>120</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
ProtocolServer
--
+ ListenAndServerTLS(): error
+ Close(): error

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>730</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>320</x>
      <y>630</y>
      <w>130</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>110.0;30.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>470</x>
      <y>530</y>
      <w>140</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>QuicServer
--
-listener: quic.Listener</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>450</x>
      <y>590</y>
      <w>110</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;70.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>350</x>
      <y>140</y>
      <w>200</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Connection
--
+ ServerConn()
+ SetReadDeadLine()
+ SetWriteDeadline()
+ Read()
+ Write()
# do care about the response
+ WriteMessageAsync()
+ WriteMessageSync()
+ ReadMessage()
+ RemoteAddr()
+ LocalAddr()
+ ConnectionState()
+ Close()

bg=orange
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>320</x>
      <y>390</y>
      <w>100</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>460</x>
      <y>390</y>
      <w>90</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>620</x>
      <y>30</y>
      <w>290</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>WSConnection
--
- wsConn: webscoket.Conn
- consumer: io.Writer
# 这个东西与AutoRoute有关，
# 但是有什么用呢？
- messageFifo: fifo.MessageFifo 
--
# ServerConn函数会调用如下的两个
# 函数进行处理接收到的数据
- hanleMessage()
- handleRawData()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>540</x>
      <y>260</y>
      <w>240</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;220.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>760</x>
      <y>250</y>
      <w>200</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>QuicConnection
--
# smgr.Session后面是quic.Session
- session: smgr.Session 
- consumer: io.Writer
- messageFifo: *fifo.MessageFifo
--
# ServerConn会使用这两个
- handlerMessage()
- handleRawData()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>540</x>
      <y>160</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>730</x>
      <y>850</y>
      <w>200</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
ProtocolClient
--
# 用与与相应的server建立连接
+ Connect() Connection, error</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>540</x>
      <y>360</y>
      <w>210</w>
      <h>550</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;100.0;110.0;530.0;190.0;530.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>800</x>
      <y>800</y>
      <w>30</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1010</x>
      <y>680</y>
      <w>220</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>QuicClient
--
ctrlLan: layne.Lane
--
# 真实返回了一个QuicConnection
+ Connect(): Conn.Connection</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>540</x>
      <y>320</y>
      <w>530</w>
      <h>380</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;510.0;360.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>880</x>
      <y>720</y>
      <w>150</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
依赖其
建立Connection</panel_attributes>
    <additional_attributes>130.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1000</x>
      <y>860</y>
      <w>220</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>WSClient
--
dialer: *websocket.Dialer
--
# 真实返回了一个WSConnection
+ Connect(): Conn.Connection</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>880</x>
      <y>740</y>
      <w>180</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
依赖其
建立Connection</panel_attributes>
    <additional_attributes>120.0;160.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>540</x>
      <y>300</y>
      <w>740</w>
      <h>630</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;720.0;370.0;720.0;610.0;680.0;610.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1070</x>
      <y>100</y>
      <w>180</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Lane
--
+ SetReadDeadline()
+ SetWriteDeadline()
+ ReadMessage()
+ WriteMessage
+ Read()
+ Write()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>900</x>
      <y>110</y>
      <w>190</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
依赖lane的具体实现
进行数据的读写</panel_attributes>
    <additional_attributes>170.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1310</x>
      <y>10</y>
      <w>260</w>
      <h>130</h>
    </coordinates>
    <panel_attributes># 使用proto进行编码与解码
QuicLane
--
- writeDeadline
- readDeadline
# 这里最后会通过直接调用quic.Stream
# 的方法进行读写
- stream: quic.Stream
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1240</x>
      <y>40</y>
      <w>90</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;110.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1330</x>
      <y>200</y>
      <w>240</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>WSLaneWithoutPack
--
- writeDeadlin
- readDeadline
# 这里最后会直接通过调用ws.
# 的底层接口进行读写
- conn: *websocket.Conn
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1240</x>
      <y>180</y>
      <w>110</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>950</x>
      <y>230</y>
      <w>320</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
依赖lane的具体实现
进行数据的读写</panel_attributes>
    <additional_attributes>180.0;10.0;180.0;70.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>920</x>
      <y>900</y>
      <w>100</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>800</x>
      <y>720</y>
      <w>460</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;210.0;10.0;260.0;440.0;260.0;440.0;10.0;430.0;10.0</additional_attributes>
  </element>
</diagram>
